Django documentation¶
Everything you need to know about Django.

How the documentation is organized¶
Django has a lot of documentation. A high-level overview of how it’s organized will help you know where to look for certain things:

Tutorials take you by the hand through a series of steps to create a Web application. Start here if you’re new to Django or Web application development. Also look at the “First steps” below.
Topic guides discuss key topics and concepts at a fairly high level and provide useful background information and explanation.
Reference guides contain technical reference for APIs and other aspects of Django’s machinery. They describe how it works and how to use it but assume that you have a basic understanding of key concepts.
How-to guides are recipes. They guide you through the steps involved in addressing key problems and use-cases. They are more advanced than tutorials and assume some knowledge of how Django works.
First steps¶
Are you new to Django or to programming? This is the place to start!

From scratch: Overview | Installation
Tutorial: Part 1: Requests and responses | Part 2: Models and the admin site | Part 3: Views and templates | Part 4: Forms and generic views | Part 5: Testing | Part 6: Static files | Part 7: Customizing the admin site
Advanced Tutorials: How to write reusable apps | Writing your first patch for Django
The model layer¶
Django provides an abstraction layer (the “models”) for structuring and manipulating the data of your Web application. Learn more about it below:

Models: Introduction to models | Field types | Indexes | Meta options | Model class
QuerySets: Making queries | QuerySet method reference | Lookup expressions
Model instances: Instance methods | Accessing related objects
Migrations: Introduction to Migrations | Operations reference | SchemaEditor | Writing migrations
Advanced: Managers | Raw SQL | Transactions | Aggregation | Search | Custom fields | Multiple databases | Custom lookups | Query Expressions | Conditional Expressions | Database Functions
Other: Supported databases | Legacy databases | Providing initial data | Optimize database access | PostgreSQL specific features